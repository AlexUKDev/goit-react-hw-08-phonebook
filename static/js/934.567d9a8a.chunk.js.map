{"version":3,"file":"static/js/934.567d9a8a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.Styled.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts/Contacts.Styled.js","components/ContactItem/ContactItem.Styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.Styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.Styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectAllContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  margin-top: 18px;\n  width: 400px;\n  padding: 45px;\n  border: 2px solid rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  margin-top: 10px;\n`;\nexport const Input = styled.input`\n  width: 350px;\n  height: 35px;\n  border: solid rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n`;\n\nexport const SubmitBtn = styled.button`\n  margin-top: 15px;\n  width: 100%;\n  height: 40px;\n\n  background-color: #479e50;\n  color: white;\n  border-radius: 8px;\n  font-weight: 700;\n  border-color: transparent;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    cursor: pointer;\n    background-color: #54b95f;\n    scale: 0.994;\n  }\n`;\n","import { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nimport { Notify } from 'notiflix';\nimport { Form, Label, SubmitBtn, Input } from './ContactForm.Styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        break;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    for (const contactItem of contacts) {\n      const normalizeStateName = contactItem.name.toLowerCase();\n      const normalizeFormName = name.toLowerCase();\n\n      if (normalizeStateName === normalizeFormName) {\n        return Notify.warning(`${contactItem.name}, is already in contacts!'`);\n      }\n    }\n\n    dispatch(addContact({ name, number }));\n\n    resetForm();\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Label>\n        Name\n        <Input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n          value={name}\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          required\n        />\n      </Label>\n      <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\n\nexport const TextWrap = styled.span`\n  margin: 0px 20px 0px 0px;\n`;\n\nexport const Item = styled.li`\n  width: 100%;\n  font-size: 20px;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const DelateBtn = styled.button`\n  display: inline-block;\n  padding: 5px;\n  vertical-align: middle;\n  border-color: transparent;\n  color: rgba(0, 0, 0, 0.6);\n\n  border-radius: 8px;\n  font-weight: 700;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    cursor: pointer;\n    color: rgba(0, 0, 0, 1);\n    scale: 0.95;\n    background-color: tomato;\n  }\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { removeContact } from 'redux/contacts/operations';\nimport { TextWrap, Item, DelateBtn } from './ContactItem.Styled';\n\nimport PropTypes from 'prop-types';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      <TextWrap>{name}</TextWrap>\n      <TextWrap>{number}</TextWrap>\n      <DelateBtn\n        id={id}\n        type=\"button\"\n        onClick={() => dispatch(removeContact(id))}\n      >\n        Delate\n      </DelateBtn>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nexport const ListWrap = styled.ol`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 400px;\n  padding: 45px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n`;\n\nexport const InfoText = styled.span`\n  font-size: 16px;\n  text-align: center;\n  color: rgba(0, 0, 0, 0.5);\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { ListWrap, InfoText } from './ContactList.Styled';\nimport {\n  selectAllContacts,\n  selectFilter,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\n\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectAllContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filterValue = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const getFilteredContacts = () => {\n    const normalizeFilterValue = filterValue.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilterValue)\n    );\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const visibleContacts = getFilteredContacts();\n\n  return (\n    <ListWrap>\n      {!!(!isLoading && !contacts.length) && (\n        <InfoText>\n          Your contact list is empty. Please add a new contact to see it in the\n          saved list.\n        </InfoText>\n      )}\n      {isLoading && !error && <p>Please wait. Your contact list is loading</p>}\n      {!isLoading &&\n        visibleContacts.map(contact => (\n          <ContactItem\n            key={contact.id}\n            name={contact.name}\n            number={contact.number}\n            id={contact.id}\n          />\n        ))}\n    </ListWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LabelWrap = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 25px;\n`;\n\nexport const FilterInput = styled.input`\n  margin-top: 10px;\n  height: 30px;\n  width: 430px;\n  padding-left: 8px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n`;\n","import { useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport { updateFilterValue } from 'redux/contacts/slice';\n\nimport { LabelWrap, FilterInput } from './Filter.Styled';\n\nexport const Filter = ({ labelText }) => {\n  const dispatch = useDispatch();\n\n  const filterHandler = ({ currentTarget: { value } }) => {\n    dispatch(updateFilterValue(value.toLocaleLowerCase()));\n  };\n\n  return (\n    <LabelWrap>\n      {labelText}\n      <FilterInput onChange={filterHandler}></FilterInput>\n    </LabelWrap>\n  );\n};\n\nFilter.propTypes = {\n  labelText: PropTypes.string.isRequired,\n};\n","import { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Wrapper } from 'pages/Contacts/Contacts.Styled';\nimport { ContactsList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Filter labelText={'Find contacts by name'} />\n      <ContactsList />\n    </Wrapper>\n  );\n}\n"],"names":["selectAllContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","Form","styled","Label","Input","SubmitBtn","ContactForm","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","handleChange","target","value","onSubmit","e","preventDefault","contactItem","toLowerCase","Notify","addContact","onChange","type","pattern","title","required","Wrapper","TextWrap","Item","DelateBtn","ContactItem","id","onClick","removeContact","ListWrap","InfoText","ContactsList","filterValue","useEffect","fetchContacts","visibleContacts","normalizeFilterValue","contact","includes","getFilteredContacts","length","map","LabelWrap","FilterInput","Filter","labelText","currentTarget","updateFilterValue","toLocaleLowerCase","Contacts","Helmet"],"sourceRoot":""}